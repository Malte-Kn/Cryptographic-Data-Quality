import "utils/casts/field_to_u32.zok" as field_to_u32;

//export PATH=$PATH:/home/knuth/.zokrates/bin if zokrates not found
/*
Generating Proof of Quality for Size amount of Images
*/
//Set size same as batchsize in Local_Trainers
const u32 dim = 28;
// imgcheck [x,y] x bad images out of y
def main(public field [2] imgcheck, private field[dim][dim] img)-> field[2]{
    field[2] mut count = [0,0];
    field[2] mut res = [0,0];
    field mut lowquali = 0;
    //count labels
    for u32 i in 0..dim {
        for u32 j in 0..dim{
            count[0] = if img[i][j] > 224 {count[0] + 1} else {count[0]};
            count[1] = if img[i][j] < 225 && img[i][j] > 29 {count[1] + 1} else {count[1]};
        }
    }
    lowquali = if count[0] > 10 || count [1] < 500 {lowquali} else {lowquali + 1};   
    res[0] = imgcheck[0] + lowquali;
    res[1] = imgcheck[1] + 1;
    return res;
}