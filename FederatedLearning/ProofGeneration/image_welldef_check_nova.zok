
//export PATH=$PATH:/home/knuth/.zokrates/bin if zokrates not found
/*
Generating Proof of Quality for steps amount of Images
*/
//Set steps same as batchsize in Local_Trainers
const u32 dim = 28;
// imgcheck [x,y] x bad images out of y
//check clumb of white pixles/how manywhite pixelsare clumped
def main(public u16 [3] imgcheck, private (u8[dim][dim],u32) imglabel)-> u16[3]{
    u16[3] mut count = [0,0,0];
    u16[3] mut res = [0,0,0];
    u16 mut lowquali = 0;
    u8 [dim][dim] img = imglabel.0;
    u32 label = imglabel.1;
    res[2]= if label < 10 {1} else {0};
    //check for image symbol distribution
    for u32 i in 0..dim-2 {
        for u32 j in 0..dim-2{
            count[0] = if img[i][j] > 220 && img[i+1][j] > 220{count[0] + 1} else {count[0]};
            count[1] = if img[i][j] > 220 {count[1] + 1} else {count[1]};
            count[2] = if img[i][j] > 20 {count[2] + 1} else {count[2]};
        }
    }
    lowquali = if (count[1]- count [0]) < 50 || count[1] < 5 || count[2] < 20{lowquali} else {lowquali + 1};   
    res[0] = imgcheck[0] + lowquali;
    res[1] = imgcheck[1] + 1;
    return res;
}
